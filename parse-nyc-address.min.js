function parseNycAddress(E){function A(E,A){return new RegExp("^"+A+"$").test(E)}const R={},N={1:["MARBLE ?HI?L?L"],2:["THE ?B(RO)?N?X"],4:["ADDISLEIGH ?PA?R?K","BAYSIDE ?HI?L?LS?","BELLE? ?HA?RB(OR)?","BELLE?ROSE( MANOR)","BREEZY ?P(OI)?N?T","BR(OA)?D ?CHAN(NEL)?","CAMBRIA ?H(EI)?(GH)?TS?","COLLEGE ?P(OI)?N?T","E(AST)? ?ELMHURST","FA?R ?ROCKAWAY","FO?RE?ST ?HI?L?LS?","F(OR)?T ?TILDEN","FRE?SH ?M(EA)?DO?WS","HOLLIS ?HI?L?LS?","HOWARD ?B(EA)?CH","JACKSON ?H(EI)?G?H?TS?","(JOHN F.? )?KENNEDY AIRPO?R?T","JFK ?AIRPO?R?T","KEW ?GA?RDE?NS?( HI?L?LS?)?","LITTLE ?NE?CK","LA ?GUARDIA AIRPO?R?T","L(ONG)? ?IS?(LAND)? ?CITY","MID(DLE)? ?VI?L(LA)?GE?","OAKLA?ND ?GA?RDE?NS?","(S(OUTH)? )?OZONE ?PA?R?K","Q(UEE)?NS ?VI?L(LA)?GE?","REGO ?PA?R?K","(S(OUTH)? )?RICHMOND ?HI?L?LS?","ROCHDALE ?VI?L(LA)?GE?","ROCKAWAY ?B(EA)?CH","ROCKAWAY ?PA?R?K","ROCKAWAY ?P(OI)?N?T","S(AIN)?T ?ALBANS?","SPRINGFIELD ?GA?RDE?NS?","WAVE ?CRE?ST"],5:["STATEN ?ISL?(AND)?"],6:["NEW ?YORK( CITY)?","NY ?CITY"],7:["UNITED STATES( OF AMERICA)"]},L=["ADALBERT","ALBAN","ANDREW","ANN","ANTHONY","AUSTIN","CHARLES","CLAIR","EDWARD","FELIX","FRANCIS","GEORGE","JAMES","JOHN","JOSEPH","JUDE","JULIAN","LAWRENCE","LUKE","MARK","MARY","NICHOLAS","OUEN","PATRICK","PAUL","PETER","RAYMOND","STEPHEN","THERESA"].map((E=>"ST\\.? "+E+"'?S?")).concat(["AVE?(NUE)? OF","(BMT.Q.)?AVE?(NUE)? \\w","FRONT STR(EET)?","\\w STR(EET)?","FRONT R(OA)?D","\\w R(OA)?D","OF NEW ?YORK","OF NY","OF MANHATTAN","OF THE ?BRONX","OF BROOKLYN","OF Q(UEE)?NS","CE?N?TE?R Q(UEE)?NS","OF STATEN ?ISL?(AND)?","OF SI","PS.?IS 78 Q","HA?R?BO?R BU?I?LDI?N?G Q"],Object.values(N).flat());let O=new RegExp("\\b"+L.join("\\b|\\b")+"\\b|\\S+","g"),S=E.replace(/[\s,]+/g," ").trim().toUpperCase().match(O)??[];const T=["GAR","GARAGE","REAR","AA","AB","AF","AS","BA","BB","CE","ED","SF","1/2","1/3","2/3","1/4","3/4","INT","INTER","UNDER","UNDRGRND","UNDERGROUND","AIR","RIGHT","RIGHTS","RGHT","RGHTS","RGT","RGTS","E-BLDG","W-BLDG"],I=["A","B","C","D","FRONT"];let H=0;if(0===(S[0]??"").search(/\d/))for(H=1;H<S.length&&(T.includes(S[H])||I.includes(S[H])&&T.concat(I).includes(S[H+1]??""));)H++;let e=9,D=9,n=!1,B="";const C={MANHATTAN:1,M:1,MA:1,MH:1,MN:1,BRONX:2,BX:2,BRX:2,BRON:2,BROOKLYN:3,BK:3,BRK:3,BKLYN:3,BRKLYN:3,QUEENS:4,Q:4,QU:4,QN:4,QNS:4,ARVERNE:4,ASTORIA:4,AUBURNDALE:4,BAYSIDE:4,BEECHHURST:4,BRIARWOOD:4,CORONA:4,DOUGLASTON:4,EDGEMERE:4,ELMHURST:4,FLUSHING:4,GLENDALE:4,HOLLIS:4,JAMAICA:4,LAURELTON:4,LIC:4,MALBA:4,MASPETH:4,NEPONSIT:4,RIDGEWOOD:4,ROSEDALE:4,SUNNYSIDE:4,WHITESTONE:4,WOODHAVEN:4,WOODSIDE:4,SI:5,NY:6,NYNY:6,NYC:6,US:7,USA:7},U={100:1,101:1,102:1,104:2,112:3,111:4,113:4,114:4,116:4,103:5};for(;S.length-H>1;){if(finalToken=S[S.length-1]??"",9===D){const E=/^(\d\d\d)\d\d/.exec(finalToken);if(Array.isArray(E)){B=finalToken,D=U[E[1]]??7,S.pop();continue}}if(e=C[finalToken]??9,9===e){for(const E in N)if(N[E].some((E=>A(finalToken,E)))){e=parseInt(E);break}if(9===e)break}if(6===e&&(n=!0),S.pop(),e<6)break}if(e>5&&(D<6?e=D:n&&(e=1)),H>0){S.length-H>1&&I.includes(S[H]??"")&&!["ST","ST.","AV","AVE","AVENUE"].includes(S[H+1]??"")&&H++;let E=S.slice(0,H).join(" ");""!==E&&(R.housenumber=E)}let t=S.slice(H).join(" ");if(""!==t&&(R.street=t),e<6){if(2===e){["ADRIAN AVE?(NUE)?","FO?R?T CHARLES PL(ACE)?","JACOBUS PL(ACE)?","MARBLE HI?L?L AVE?(NUE)?","MARBLE HI?L?L LA?NE?","TERRACE VIEW AVENUE","VAN CORLEAR PLACE","W(EST)? 22[58](TH)?( STR?(EET)?)?","METRO NORTH-MARBLE HI?L?L",,"MARBLE HI?L?L HOUSES B(UI)?LDI?N?G [1-37-9]","MARBLE HI?L?L HOUSES( B(UI)?LDI?N?G 10)?","ATMOSPHERE CHARTER SCH(OO)?L?","MARBLE HI?L?L HOUSES CHILDRENS? CE?N?TE?R","(THE )?SHOPS AT MARBLE HI?L?L","IRT-1-MARBLE HI?L?L-225 STREET","BROADWAY BRI?DGE?"].some((E=>A(t,E)))?e=1:H>0&&(z=parseInt(S[0]),z>0&&("BROADWAY"===t&&(5485===z||z>=5170&&z<=5480)||z<200&&/22[578](TH)? ST/.test(t))&&(e=1))}R.borough=e}return""!==B&&(R.postcode=B),R}
