const parseNycAddress=function(E){function A(E,A){return new RegExp("^"+A+"$").test(E)}const R={};let N=!1;const L={1:["MARBLE ?HI?L?L"],2:["THE ?B(RO)?N?X"],4:["ADDISLEIGH ?PA?R?K","BAYSIDE ?HI?L?LS?","BELLE? ?HA?RB(OR)?","BELLE?ROSE( MANOR)","BREEZY ?P(OI)?N?T","BR(OA)?D ?CHAN(NEL)?","CAMBRIA ?H(EI)?(GH)?TS?","COLLEGE ?P(OI)?N?T","E(AST)? ?ELMHURST","FA?R ?ROCKAWAY","FO?RE?ST ?HI?L?LS?","F(OR)?T ?TILDEN","FRE?SH ?M(EA)?DO?WS","HOLLIS ?HI?L?LS?","HOWARD ?B(EA)?CH","JACKSON ?H(EI)?G?H?TS?","(JOHN F.? )?KENNEDY AIRPO?R?T","JFK ?AIRPO?R?T","KEW ?GA?RDE?NS?( HI?L?LS?)?","LITTLE ?NE?CK","LA ?GUARDIA AIRPO?R?T","L(ONG)? ?IS?(LAND)? ?CITY","MID(DLE)? ?VI?L(LA)?GE?","OAKLA?ND ?GA?RDE?NS?","(S(OUTH)? )?OZONE ?PA?R?K","Q(UEE)?NS ?VI?L(LA)?GE?","REGO ?PA?R?K","(S(OUTH)? )?RICHMOND ?HI?L?LS?","ROCHDALE ?VI?L(LA)?GE?","ROCKAWAY ?B(EA)?CH","ROCKAWAY ?PA?R?K","ROCKAWAY ?P(OI)?N?T","S(AIN)?T ?ALBANS?","SPRINGFIELD ?GA?RDE?NS?","WAVE ?CRE?ST"],5:["STATEN ?ISL?(AND)?"],6:["NEW ?YORK( CITY)?","NY ?CITY"],7:["UNITED STATES( OF AMERICA)"]},O=["ADALBERT","ALBAN","ANDREW","ANN","ANTHONY","AUSTIN","CHARLES","CLAIR","EDWARD","FELIX","FRANCIS","GEORGE","JAMES","JOHN","JOSEPH","JUDE","JULIAN","LAWRENCE","LUKE","MARK","MARY","NICHOLAS","OUEN","PATRICK","PAUL","PETER","RAYMOND","STEPHEN","THERESA"].map((E=>"ST\\.? "+E+"'?S?")).concat(["AVE?(NUE)? OF","(BMT.Q.)?AVE?(NUE)? \\w","FRONT STR(EET)?","\\w STR(EET)?","FRONT R(OA)?D","\\w R(OA)?D","OF NEW ?YORK","OF NY","OF MANHATTAN","OF THE ?BRONX","OF BROOKLYN","OF Q(UEE)?NS","CE?N?TE?R Q(UEE)?NS","OF STATEN ?ISL?(AND)?","OF SI","PS.?IS 78 Q","HA?R?BO?R BU?I?LDI?N?G Q"],Object.values(L).flat());let S=new RegExp("\\b"+O.join("\\b|\\b")+"\\b|\\S+","g"),T=E.replace(/[\s,]+/g," ").trim().toUpperCase().match(S)??[];const I=["GAR","GARAGE","REAR","AA","AB","AF","AS","BA","BB","CE","ED","SF","1/2","1/3","2/3","1/4","3/4","INT","INTER","UNDER","UNDRGRND","UNDERGROUND","AIR","RIGHT","RIGHTS","RGHT","RGHTS","RGT","RGTS","E-BLDG","W-BLDG"],e=["A","B","C","D","FRONT"];let H=0;if(0===(T[0]??"").search(/\d/))for(H=1;H<T.length&&(I.includes(T[H])||e.includes(T[H])&&I.concat(e).includes(T[H+1]??""));)H++;let D=9,n=9,B=!1,t="";const C={MANHATTAN:1,M:1,MA:1,MH:1,MN:1,BRONX:2,BX:2,BRX:2,BRON:2,BROOKLYN:3,BK:3,BRK:3,BKLYN:3,BRKLYN:3,QUEENS:4,Q:4,QU:4,QN:4,QNS:4,ARVERNE:4,ASTORIA:4,AUBURNDALE:4,BAYSIDE:4,BEECHHURST:4,BRIARWOOD:4,CORONA:4,DOUGLASTON:4,EDGEMERE:4,ELMHURST:4,FLUSHING:4,GLENDALE:4,HOLLIS:4,JAMAICA:4,LAURELTON:4,LIC:4,MALBA:4,MASPETH:4,NEPONSIT:4,RIDGEWOOD:4,ROSEDALE:4,SUNNYSIDE:4,WHITESTONE:4,WOODHAVEN:4,WOODSIDE:4,SI:5,NY:6,NYNY:6,NYC:6,US:7,USA:7},U={100:1,101:1,102:1,104:2,112:3,111:4,113:4,114:4,116:4,103:5};for(;T.length-H>1;){if(finalToken=T[T.length-1]??"",9===n){const E=/^(\d\d\d)\d\d/.exec(finalToken);if(Array.isArray(E)){t=finalToken,n=U[E[1]]??7,T.pop();continue}}if(D=C[finalToken]??9,9===D){for(const E in L)if(L[E].some((E=>A(finalToken,E)))){D=parseInt(E);break}if(9===D)break}if(6===D&&(B=!0),T.pop(),D<6)break}if(D>5&&(n<6?D=n:B&&(D=1)),H>0){T.length-H>1&&e.includes(T[H]??"")&&!["ST","ST.","AV","AVE","AVENUE"].includes(T[H+1]??"")&&H++;let E=T.slice(0,H).join(" ");""!==E&&(R.housenumber=E)}let o=T.slice(H).join(" ");if(""!==o&&(R.street=o),D<6){if(2===D){["ADRIAN AVE?(NUE)?","FO?R?T CHARLES PL(ACE)?","JACOBUS PL(ACE)?","MARBLE HI?L?L AVE?(NUE)?","MARBLE HI?L?L LA?NE?","TERRACE VIEW AVENUE","VAN CORLEAR PLACE","W(EST)? 22[58](TH)?( STR?(EET)?)?","METRO NORTH-MARBLE HI?L?L",,"MARBLE HI?L?L HOUSES B(UI)?LDI?N?G [1-37-9]","MARBLE HI?L?L HOUSES( B(UI)?LDI?N?G 10)?","ATMOSPHERE CHARTER SCH(OO)?L?","MARBLE HI?L?L HOUSES CHILDRENS? CE?N?TE?R","(THE )?SHOPS AT MARBLE HI?L?L","IRT-1-MARBLE HI?L?L-225 STREET","BROADWAY BRI?DGE?"].some((E=>A(o,E)))?N=!0:H>0&&(housenumberInt=parseInt(T[0]),housenumberInt>0&&("BROADWAY"===o&&(5485===housenumberInt||housenumberInt>=5170&&housenumberInt<=5480)||housenumberInt<200&&/22[578](TH)? ST/.test(o))&&(N=!0)),N&&(D=1)}R.borough=D,N&&(R.marble_hill=!0)}return""!==t&&(R.postcode=t),R};module.exports=parseNycAddress;
